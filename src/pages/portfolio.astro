---
import Layout from '../layouts/Layout.astro';
---

<Layout title="portfolio">
    <main class="pb-20">
        <div class="w-full mt-16 max-w-[1300px] mx-auto px-5 md:px-10">
            <h1 class="text-light_blue text-3xl md:text-4xl font-bold">
                projects
            </h1>
            <h5 class="text-light_blue text-sm md:text-xs mt-4 md:mt-3">some of the things I've made and lessons I've learned</h5>
        </div>

        <!-- header -->
        <div class="flex flex-row max-w-[1440px] mt-16 md:mt-20 mx-auto">
            <div class="grow h-0.5 bg-line mt-4"/>
            <div class="flex-none flex flex-row justify-start w-full max-w-[1300px]">
                <div class="min-w-3 md:w-7 h-0.5 bg-line mt-4" />
                <a class="flex-none flex flex-row group pr-2 md:pr-3 h-full pt-[3px] text-lg md:text-base text-accent_purple font-black md:font-bold rounded-r-md pl-1 md:pl-2"
                   href="https://github.com/realwitt" target="_blank">
                    <h3 class="group-hover:text-accent_pink transition duration-500">
                        fakerMaker3000
                    </h3>
                    <svg class="fill-accent_purple group-hover:fill-accent_pink transition duration-500 w-6 h-6 md:w-5 md:h-5 ml-3 md:ml-3 mt-[1px]" xmlns="http://www.w3.org/2000/svg" width="98" height="96" viewBox="0 0 98 96">
                        <path class="cls-1"
                              d="M48.85,0A49.27,49.27,0,0,0,33.4,95.91c2.43.49,3.32-1.06,3.32-2.37,0-1.14-.08-5.05-.08-9.12-13.59,2.93-16.42-5.87-16.42-5.87-2.18-5.7-5.42-7.17-5.42-7.17-4.45-3,.32-3,.32-3,4.94.32,7.53,5,7.53,5,4.36,7.49,11.4,5.38,14.23,4.07A10.48,10.48,0,0,1,40,70.89c-10.84-1.14-22.25-5.38-22.25-24.28a19.24,19.24,0,0,1,5-13.2c-.49-1.22-2.19-6.28.48-13,0,0,4.13-1.3,13.43,5.05a47.51,47.51,0,0,1,12.21-1.63,47,47,0,0,1,12.22,1.63c9.3-6.35,13.42-5.05,13.42-5.05,2.67,6.76,1,11.82.49,13a18.91,18.91,0,0,1,5,13.2c0,18.9-11.4,23.06-22.32,24.28C59.45,72.44,61,75.37,61,80c0,6.6-.08,11.9-.08,13.52,0,1.31.89,2.86,3.31,2.37A49.27,49.27,0,0,0,48.85,0Z"/>
                    </svg>
                </a>
                <div class="flex-1 bg-line h-0.5 mt-4 min-w-[25px] max-w-[50px]" />
                <a class="group hover:border-accent_pink transition duration-500 text-accent_purple text-sm bg-dark_blue md:text-xs mt-0.5 font-black md:font-bold text-nowrap border py-1 px-1.5 mx-1.5 rounded border-accent_purple stroke-accent_purpleA" href="/fakermaker3000">
                    <h4 class="group-hover:text-accent_pink transition duration-500">view |></h4>
                </a>
                <div class="flex-1 bg-line h-0.5 mt-4 min-w-[100px] max-w-[300px]" />
                <div class="grow mt-3.5" />
            </div>
            <div class="grow"></div>
        </div>

        <div class="max-w-[1300px] px-5 md:px-10 mx-auto mt-6 md:mt-4">
            <h3 class="text-base md:text-sm font-black md:font-semibold text-subtle_blue mt-7 md:mt-5">about</h3>
            <p class="text-sm md:text-xs text-light_blue max-w-[700px]">FakerMaker3000 allows you to create a csv of fake data using the Java datafaker library, and you can save your schema using a UUID so you can come back and modify it later.</p>

            <h3 class="text-base md:text-sm font-black md:font-semibold text-subtle_blue mt-5">stack</h3>
            <ul role="list" class="text-sm md:text-xs marker:text-light_blue list-disc pl-3.5 text-light_blue">
                <li>Kotlin, Spring</li>
                <li>Astro, React, TypeScript, tailwindcss</li>
                <li>nginx</li>
                <li>docker</li>
                <li>postgres</li>
            </ul>

            <h3 class="text-base md:text-sm font-black md:font-semibold text-subtle_blue mt-7 md:mt-5">motivation</h3>
            <p class="text-sm md:text-xs text-light_blue max-w-[700px]">After having to create a CSV for an internal app at work and trying to test it, I realized making test data by hand was an absolute pain (only setting the entity fields youâ€™re testing). To mitigate this I spent two days at work making generators that used valid business logic for the two db entities I was working with so I could easily create 100 employers with 1000 employees each. It made testing things way easier and I thought it would be fun to expand on that.</p>

            <h3 class="text-base md:text-sm font-black md:font-semibold text-subtle_blue mt-5">things learned</h3>
            <p class="text-sm md:text-xs text-light_blue max-w-[700px]">This app had a lot of firsts for me:</p>
            <ul role="list" class="text-sm md:text-xs marker:text-light_blue list-disc pl-5 md:pl-3.5 text-light_blue">
                <li>setting up a data structure for a payload that can change in every request (the fakermaker schema)</li>
                <li>deserializing a payload that can change in every request</li>
                <li>not having nulls in your DTO constructors (Kotlin sort of forces you to define defaults)</li>
                <li>deploying a front and back end</li>
                <li>creating my own dockerfile</li>
                <li>setting up nginx for routing backend requests</li>
                <li>filtering traffic to my Digital Ocean droplet using a Cloudflare proxy (bot traffic mitigation)</li>
            </ul>
        </div>

    </main>
</Layout>
